server {
    listen 80;
    server_name localhost;

    # Redirect all HTTP traffic to HTTPS using 307 Temporary Redirect
    return 307 https://$server_name$request_uri;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}

server {
    listen 443 ssl;
    server_name localhost;
    root /var/www/html;
    index index.php index.html index.htm;

    ssl_certificate /etc/ssl/certs/localhost.crt;
    ssl_certificate_key /etc/ssl/private/localhost.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Add CORS headers for all responses
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;


    # Handle preflight OPTIONS requests for non-API routes
    location / {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }

        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP processing for all other PHP files
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        # Add CORS headers for PHP responses
        fastcgi_param HTTP_ACCESS_CONTROL_ALLOW_ORIGIN "*";
        fastcgi_param HTTP_ACCESS_CONTROL_ALLOW_METHODS "GET, POST, OPTIONS, PUT, DELETE";
        fastcgi_param HTTP_ACCESS_CONTROL_ALLOW_HEADERS "Content-Type, Authorization";
    }

    # Deny access to .htaccess files
    location ~ /\.ht {
        deny all;
    }

    # Gzip compression configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/xml+rss
        application/json;
}
